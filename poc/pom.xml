<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>microservice-orchestration-platform</artifactId>
        <groupId>com.brandnewdata</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>poc</artifactId>

    <properties>
        <start-class>com.brandnewdata.mop.poc.PocApplication</start-class>
        <dom4j.version>2.1.3</dom4j.version>
        <jaxen.version>1.2.0</jaxen.version>
        <camundal.operate.client.version>1.0.2</camundal.operate.client.version>
        <jackson.util.version>1.1.0</jackson.util.version>
        <feel.engine.version>1.14.2</feel.engine.version>
        <maven.build.timestamp.format>yyyyMMdd_HHmmssSSS</maven.build.timestamp.format>
        <imageTag>10.101.2.123/g2/${project.artifactId}:${maven.build.timestamp}</imageTag>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>

            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>${jaxen.version}</version>
            </dependency>

            <dependency>
                <groupId>io.camunda</groupId>
                <artifactId>camunda-operate-client-java</artifactId>
                <version>${camundal.operate.client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.duanxinyuan</groupId>
                <artifactId>json-jackson</artifactId>
                <version>${jackson.util.version}</version>
            </dependency>

            <dependency>
                <groupId>org.camunda.feel</groupId>
                <artifactId>feel-engine</artifactId>
                <version>${feel.engine.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- https://spring.io/projects/spring-data-jdbc  -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- zeebe -->
        <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>spring-zeebe-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>camunda-operate-client-java</artifactId>
        </dependency>

        <!-- 连接池  -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>

        <!-- JDBC驱动  -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- mybatis plus  -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-extension</artifactId>
        </dependency>

        <!-- jooq -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.14.11</version>
        </dependency>

        <!-- nacos -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!-- nacos service name为空的问题 https://github.com/alibaba/nacos/issues/5448 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>

        <!-- jackson util -->
        <dependency>
            <groupId>com.github.duanxinyuan</groupId>
            <artifactId>json-jackson</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-scala -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.13</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- https://github.com/FasterXML/jackson-datatypes-misc  -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>2.13.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- feel -->
        <dependency>
            <groupId>org.camunda.feel</groupId>
            <artifactId>feel-engine</artifactId>
        </dependency>


        <!--  elasticsearch -->
        <dependency>
            <groupId>co.elastic.clients</groupId>
            <artifactId>elasticsearch-java</artifactId>
            <version>7.17.5</version>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.json</groupId>
                    <artifactId>jakarta.json-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- elasticsearch中用到的json默认为jakarta.json-api -->
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-client-sniffer</artifactId>
            <version>7.17.5</version>
        </dependency>

        <!-- http proxy -->
        <dependency>
            <groupId>org.mitre.dsmiley.httpproxy</groupId>
            <artifactId>smiley-http-proxy-servlet</artifactId>
            <version>1.12.1</version>
        </dependency>

        <!-- api 导入导出用openapi协议，需要这个来解析 -->
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>2.1.2</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>1.32</version>
        </dependency>

        <!-- xml解析相关 -->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
        </dependency>

        <!-- 图表相关 -->
        <dependency>
            <groupId>org.icepear.echarts</groupId>
            <artifactId>echarts-java</artifactId>
            <version>1.0.7</version>
        </dependency>

        <!-- caiwillie二方包 -->
        <dependency>
            <groupId>com.caiwillie</groupId>
            <artifactId>utils</artifactId>
        </dependency>

        <!-- brandnewdata二方包 -->
        <dependency>
            <groupId>com.brandnewdata</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.brandnewdata</groupId>
            <artifactId>mop-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.brandnewdata</groupId>
            <artifactId>application-connector-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-image</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <image>
                        <name>${imageTag}</name>
                        <publish>true</publish>
                        <builder>registry.cn-hangzhou.aliyuncs.com/caiwillie/paketobuildpacks_builder:base</builder>
                        <runImage>registry.cn-hangzhou.aliyuncs.com/caiwillie/paketobuildpacks_run:base-cnb</runImage>
                        <env>
                        </env>
                        <buildCache>
                            <volume>
                                <name>cache-${project.artifactId}.build</name>
                            </volume>
                        </buildCache>
                        <launchCache>
                            <volume>
                                <name>cache-${project.artifactId}.launch</name>
                            </volume>
                        </launchCache>
                        <bindings>
                            <!-- /platform/bindings是默认的绑定目录 -->
                            <binding>${project.basedir}/../bindings/dependency-mapping:/platform/bindings/dependency-mapping</binding>
                        </bindings>
                    </image>
                    <docker>
                        <publishRegistry>
                            <url>10.101.2.123</url>
                            <username>admin</username>
                            <password>brand@2022</password>
                        </publishRegistry>
                    </docker>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>